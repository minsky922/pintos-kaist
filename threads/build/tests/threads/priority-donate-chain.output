Kernel command line: -q run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 0.
(priority-donate-chain) interloper 1 finished.
(priority-donate-chain) main should have priority 6.  Actual priority: 0.
(priority-donate-chain) interloper 2 finished.
(priority-donate-chain) main should have priority 9.  Actual priority: 0.
(priority-donate-chain) interloper 3 finished.
(priority-donate-chain) main should have priority 12.  Actual priority: 0.
(priority-donate-chain) interloper 4 finished.
(priority-donate-chain) main should have priority 15.  Actual priority: 0.
(priority-donate-chain) interloper 5 finished.
(priority-donate-chain) main should have priority 18.  Actual priority: 0.
(priority-donate-chain) interloper 6 finished.
(priority-donate-chain) main should have priority 21.  Actual priority: 0.
(priority-donate-chain) interloper 7 finished.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chain) end
Execution of 'priority-donate-chain' complete.
Timer: 38 ticks
Thread: 0 idle ticks, Interrupt 0x0d (#GP General Protection Exception) at rip=8004208df7
 cr2=0000000000000000 error=            4000
rax 0000000000000000 rbx 0000000000204400 rcx 0000000000000020 rdx 00000000000003f9
rsp 0000008004000db8 rbp 0000008004000df0 rsi 0000000000000003 rdi 0000000000000001
rip 0000008004208df7 r8 0000008004000ec8  r9 0000008004216723 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x800421343b 0x80042089ec 0x8004208d9e 0x8004207b00 0x800420e0a8 0x80042167ef 0x8004216760 0x8004210987 0x800421660f 0x800421093e 0x8004206b2d 0x8004206827 0x80042067dd 0x800420613d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 39 ticks
Thread: 0 idle ticks, 39 kernel ticks, 0 user ticks
Console: 2